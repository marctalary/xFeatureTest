# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
  none

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  displayName: 'nuget restore solution'
  inputs:
    restoreSolution: '$(solution)'

- task: DotNetCoreCLI@2
  displayName: 'dotnet build'
  inputs:
    command: 'build'
    projects: '$(solution)'
    arguments: '-c $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'dotnet test'
  inputs:
    command: 'test'
    projects: '$(Build.SourcesDirectory)/src/ExampleTestProject/ExampleTestProject.csproj'

- task: DotNetCoreCLI@2
  displayName: 'dotnet pack'
  inputs:
    command: 'pack'
    packagesToPack: '$(Build.SourcesDirectory)/src/XFeatureTest/XFeatureTest.csproj'
    configuration: '$(BuildConfiguration)'
    packDirectory: '$(Build.ArtifactStagingDirectory)'
    includesymbols: true
    includesource: true
    versioningScheme: 'byEnvVar'
    versionEnvVar: 'PackageVersion'

- task: NuGetAuthenticate@0
  inputs:
    nuGetServiceConnections: 'Public Nuget Feed'

#- task: DotNetCoreCLI@2
#  displayName: Push Nuget Package
#  inputs:
#    command: custom
#    custom: nuget
#    arguments: >
#      push $(Build.ArtifactStagingDirectory)/*.nupkg
#      -s $(NuGetSourceServerUrl)
#      -k $(NuGetSourceServerApiKey)

- task: DotNetCoreCLI@2
  displayName: 'dotnet push nuget.org'
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg'
#    nuGetFeedType: 'external'
#    publishFeedCredentials: 'Public Nuget Feed'
